<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>沟通世界，实现梦想</title>
  <subtitle>一个有理想的开发者</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rxxy.github.io/"/>
  <updated>2016-12-26T15:38:57.338Z</updated>
  <id>https://rxxy.github.io/</id>
  
  <author>
    <name>Rxxy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Tomcat 启动卡在部署项目时（linux）</title>
    <link href="https://rxxy.github.io/2016/11/14/Tomcat%20%E5%90%AF%E5%8A%A8%E5%8D%A1%E5%9C%A8%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E6%97%B6%EF%BC%88linux%EF%BC%89/"/>
    <id>https://rxxy.github.io/2016/11/14/Tomcat 启动卡在部署项目时（linux）/</id>
    <published>2016-11-14T12:26:58.817Z</published>
    <updated>2016-12-26T15:38:57.338Z</updated>
    
    <content type="html"><![CDATA[<p>#Tomcat 启动卡在部署项目时（linux）</p>
<p>找到<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">```securerandom.source=file:/dev/./urandom</div></pre></td></tr></table></figure></p>
<blockquote>
<p>这时候根据修改内容就可以查到因为此原因不仅可以造成tomcat卡住，也会造成weblogic启动缓慢，<br>linux或者部分unix系统提供随机数设备是<code>/dev/random</code>和<code>/dev/urandom</code>，两个有区别，<br><code>urandom</code>安全性没有<code>random</code>高，但random需要时间间隔生成随机数。jdk默认调用random。<br>再后来，终于在weblogic的官方文档中 Monitoring and Troubleshooting 找到了 Avoiding JVM Delays Caused ByRandom Number Generation 这样一个标题。摘录如下：</p>
<p>The library used for randomnumber generation in Sun’s JVM relies on /dev/random by default for UNIXplatforms. This can potentially block the Oracle WebLogic CommunicationServices process because on some operating systems /dev/random waits for acertain amount of “noise” to be generated on the host machine beforereturning a result. Although /dev/random is more secure, Oracle recommendsusing /dev/urandom if the default JVM configuration delays Oracle WebLogicCommunication Services startup.</p>
<p>To determine if your operatingsystem exhibits this behavior, try displaying a portion of the file from ashell prompt:</p>
<p>head -n 1 /dev/random<br>Open the<code>$JAVA_HOME/jre/lib/security/java.security</code> file in a text editor.</p>
<p>Change the line:</p>
<p>securerandom.source=file:/dev/random<br>to read:</p>
<p>securerandom.source=file:/dev/urandom<br>Save your change and exit thetext editor.<br>其中说到：可通过 head -n 1 /devrandom 查看是否你的系统会出现伪随机数提供等待。OK就这个，试了一下，果然，在服务器第一次启动后，这个可以快速提供一个值，但当再次调用时发生等待。</p>
</blockquote>
<p>解决办法：</p>
<p>永久：oracle 说修改$JAVA_HOME/jre/lib/security/java.security文件，替换<code>securerandom.source=file:/dev/random</code>为<code>securerandom.source=file:/dev/urandom</code>。对所有使用JVM的应用生效。（这个永久的方法，这里面有个问题，就是设置时候实际应该设置为<code>securerandom.source=file:/dev/./urandom</code>，否则不生效）</p>
<p>DOMAIN临时：修改startWeblogic.sh文件，JAVA_OPTIONS=”${SAVE_JAVA_OPTIONS}-Djava.security.egd=file:/dev/./urandom”</p>
<p>后继的SecureRandom 测试学习</p>
<p>编写JAVA类如下，运行测试，第一次正常，第二次等待，重启服务器后第一次又正常。启动加入参数<code>-Djava.security.egd=file:/dev/./urandom</code> 正常</p>
<p>来自<a href="[http://blog.csdn.net/njchenyi/article/details/46641141](http://blog.csdn.net/njchenyi/article/details/46641141)">[http://blog.csdn.net/njchenyi/article/details/46641141](http://blog.csdn.net/njchenyi/article/details/46641141)</a></p>
<p>原文地址：<a href="http://blog.csdn.net/njchenyi/article/details/46641141" target="_blank" rel="external">http://blog.csdn.net/njchenyi/article/details/46641141</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#Tomcat 启动卡在部署项目时（linux）&lt;/p&gt;
&lt;p&gt;找到&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
